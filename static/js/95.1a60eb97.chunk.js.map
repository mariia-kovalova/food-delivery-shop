{"version":3,"file":"static/js/95.1a60eb97.chunk.js","mappings":"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","sources":["redux/orders/selectors.js","hooks/useOrders.js","redux/user/selectors.js","hooks/useUser.js","modules/Cart/components/Map/Map.styled.jsx","modules/Cart/components/Location/Location.styled.jsx","modules/Cart/components/Location/Location.jsx","modules/Cart/components/Map/Map.jsx","modules/Cart/components/UserForm/schema.js","modules/Cart/components/UserForm/inputs.js","shared/utils/getDefaultValues.js","modules/Cart/components/FormField/FormField.styled.jsx","modules/Cart/components/FormField/FormField.jsx","modules/Cart/components/UserForm/UserForm.styled.jsx","shared/utils/getCleanItems.js","modules/Cart/components/UserForm/UserForm.jsx","shared/utils/getOrderId.js","modules/Cart/components/Amount/Amount.styled.jsx","modules/Cart/components/Amount/Amount.jsx","modules/Cart/components/CartItem/CartItem.styled.jsx","modules/Cart/components/CartItem/CartItem.jsx","modules/Cart/components/CartList/CartList.styled.jsx","modules/Cart/components/CartList/CartList.jsx","modules/Cart/components/Submit/Submit.styled.jsx","modules/Cart/components/Submit/Submit.jsx","modules/Cart/Cart.styled.jsx","modules/Cart/Cart.jsx","pages/CartPage/CartPage.jsx","shared/styles/components/BaseButton.styled.jsx","shared/styles/components/Info.jsx","shared/styles/components/Section.styled.jsx","shared/utils/formatNumbers.js","shared/utils/getPrice.js","shared/utils/productTitleNoramlize.js","shared/validation/messages.js","shared/validation/regexp.js"],"sourcesContent":["export const selectOrdersItems = state => state.orders.items;\nexport const selectOrdersIsLoading = state => state.orders.isLoading;\nexport const selectOrdersError = state => state.orders.error;\n","import { useSelector } from 'react-redux';\nimport {\n  selectOrdersError,\n  selectOrdersIsLoading,\n  selectOrdersItems,\n} from 'redux/orders/selectors';\n\nexport const useOrders = () => {\n  const orders = useSelector(selectOrdersItems);\n  const isLoading = useSelector(selectOrdersIsLoading);\n  const error = useSelector(selectOrdersError);\n\n  return {\n    orders,\n    isLoading,\n    error,\n  };\n};\n","export const selectUserName = state => state.user.name;\nexport const selectUserEmail = state => state.user.email;\nexport const selectUserNumber = state => state.user.number;\nexport const selectUserAddress = state => state.user.address;\nexport const selectUserLocation = state => state.user.location;\n","import { useSelector } from 'react-redux';\nimport {\n  selectUserAddress,\n  selectUserEmail,\n  selectUserLocation,\n  selectUserName,\n  selectUserNumber,\n} from 'redux/user/selectors';\n\nexport const useUser = () => {\n  const name = useSelector(selectUserName);\n  const email = useSelector(selectUserEmail);\n  const number = useSelector(selectUserNumber);\n  const address = useSelector(selectUserAddress);\n  const user_location = useSelector(selectUserLocation);\n\n  return {\n    name,\n    email,\n    number,\n    address,\n    user_location,\n  };\n};\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  height: 300px;\n`;\n\nexport const DeliveryInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  margin-top: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Field = styled.div`\n  margin-top: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n\n  color: ${props => props.textPrimary};\n`;\n\nexport const Input = styled.input`\n  background-color: #fff;\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.primary};\n  border-radius: 8px;\n  color: #212121;\n  padding: 0.875rem;\n\n  width: 100%;\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n\n    color: ${props => props.theme.text};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { setUserAddress, setUserLocation } from 'redux/user/slice';\nimport { Autocomplete } from '@react-google-maps/api';\nimport { Field, Input, Label } from './Location.styled';\n\nconst inputId = nanoid();\n\nexport const Location = ({ address, map }) => {\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setInputValue(address);\n\n    return () => setAutocomplete(null);\n  }, [address]);\n\n  const onInputChange = ({ target }) => {\n    setInputValue(target.value.trim());\n  };\n\n  const onLoad = autocomplete => {\n    setAutocomplete(autocomplete);\n  };\n\n  const onPlaceChanged = () => {\n    const place = autocomplete && autocomplete.getPlace();\n\n    if (!place) return;\n\n    const address = place.formatted_address;\n\n    if (!address) {\n      dispatch(setUserLocation(null));\n      dispatch(setUserAddress(place.name));\n    }\n\n    const lat = place.geometry.location.lat();\n    const lng = place.geometry.location.lng();\n    map && map.panTo({ lat, lng });\n    dispatch(setUserLocation({ lat, lng }));\n    dispatch(setUserAddress(address));\n  };\n\n  return (\n    <Field>\n      <Label htmlFor={inputId}>Address</Label>\n      <Autocomplete onPlaceChanged={onPlaceChanged} onLoad={onLoad}>\n        <Input\n          id={inputId}\n          name=\"address\"\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n          placeholder=\"Enter address\"\n          required\n        />\n      </Autocomplete>\n    </Field>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { DirectionsRenderer, GoogleMap, Marker } from '@react-google-maps/api';\nimport { useUser } from 'hooks/useUser';\nimport { useCart } from 'hooks/useCart';\nimport { useDispatch } from 'react-redux';\nimport { setUserAddress, setUserLocation } from 'redux/user/slice';\nimport { DeliveryInfo, Wrap } from './Map.styled';\nimport { Location } from '../Location/Location';\n\nconst initValue = {\n  map: null,\n  dir: null,\n  distance: '0 km',\n  duration: '0 m',\n};\n\nexport const Map = () => {\n  const { address, user_location: destination } = useUser();\n  const { user_id, store_location: origin } = useCart();\n  const [map, setMap] = useState(/** @type google.maps.Map */ (initValue.map));\n  const [directionsResponse, setDirectionsResponse] = useState(initValue.dir);\n  const [distance, setDistance] = useState(initValue.distance);\n  const [duration, setDuration] = useState(initValue.duration);\n\n  const dispatch = useDispatch();\n\n  const geocoder = new window.google.maps.Geocoder();\n\n  useEffect(() => {\n    if (!user_id) {\n      const getLocation = ({ coords }) => {\n        dispatch(\n          setUserLocation({\n            lat: coords.latitude,\n            lng: coords.longitude,\n          })\n        );\n      };\n\n      navigator.geolocation.getCurrentPosition(getLocation);\n    }\n  }, [dispatch, user_id]);\n\n  useEffect(() => {\n    const calculateRoute = async (origin, destination) => {\n      if (!origin || !destination) return;\n\n      const directionsService = new window.google.maps.DirectionsService();\n\n      const results = await directionsService.route({\n        origin,\n        destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      });\n\n      setDirectionsResponse(results);\n      setDistance(results.routes[0].legs[0].distance.text);\n      setDuration(results.routes[0].legs[0].duration.text);\n    };\n\n    calculateRoute(origin, destination);\n\n    return () => {\n      setMap(initValue.map);\n      setDirectionsResponse(initValue.dir);\n      setDistance(initValue.distance);\n      setDuration(initValue.duration);\n    };\n  }, [destination, origin]);\n\n  const onMapClick = ({ latLng }) => {\n    if (!latLng) return;\n\n    const location = {\n      lat: latLng.lat(),\n      lng: latLng.lng(),\n    };\n\n    dispatch(setUserLocation(location));\n\n    geocoder.geocode({ latLng }, (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const address = results[0].formatted_address || results[0].name;\n        dispatch(setUserAddress(address));\n      }\n    });\n  };\n\n  return (\n    <>\n      <Wrap>\n        <GoogleMap\n          center={origin}\n          zoom={11}\n          mapContainerStyle={{ width: '100%', height: '100%' }}\n          options={{\n            zoomControl: false,\n            streetViewControl: false,\n            mapTypeControl: false,\n            fullscreenControl: false,\n          }}\n          onLoad={map => setMap(map)}\n          onClick={onMapClick}\n        >\n          <Marker position={origin} />\n          {destination && <Marker position={destination} />}\n          {directionsResponse && (\n            <DirectionsRenderer directions={directionsResponse} />\n          )}\n        </GoogleMap>\n      </Wrap>\n      <DeliveryInfo>\n        <p>Distance: </p>\n        <p>{distance}</p>\n        <p>Duration: </p>\n        <p>{duration}</p>\n      </DeliveryInfo>\n      <Location address={address} map={map} geocoder={geocoder} />\n    </>\n  );\n};\n","import {\n  emailMes,\n  nameMes,\n  phoneMes,\n  requiredMes,\n} from 'shared/validation/messages';\nimport { nameRegExp, phoneRegExp } from 'shared/validation/regexp';\nimport * as Yup from 'yup';\n\nexport const schema = Yup.object().shape({\n  name: Yup.string()\n    .required(requiredMes)\n    .matches(nameRegExp, nameMes.format)\n    .max(16, nameMes.size),\n  email: Yup.string().required(requiredMes).email(emailMes),\n  number: Yup.string().required(requiredMes).matches(phoneRegExp, phoneMes),\n});\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const formId = nanoid();\n\nexport const inputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n  {\n    inputName: 'number',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n];\n","export const getDefaultValues = (inputs, user) =>\n  inputs.reduce(\n    (acc, input) => ({\n      ...acc,\n      [input.inputName]: user[input.inputName],\n    }),\n    {}\n  );\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n\n  color: ${props => props.textPrimary};\n`;\n\nexport const Input = styled.input`\n  background-color: #fff;\n  outline: none;\n  border: 2px solid ${({ theme }) => theme.primary};\n  border-radius: 8px;\n  color: #212121;\n  padding: 0.875rem;\n\n  width: 100%;\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n\n    color: ${props => props.theme.text};\n  }\n`;\n\nexport const Error = styled.p`\n  width: 100%;\n  position: absolute;\n  bottom: -16px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  color: red;\n  font-size: 12px;\n  font-weight: 500;\n`;\n","import { ErrorMessage } from '@hookform/error-message';\nimport { Label, Input, Error, Wrap } from './FormField.styled';\n\nexport const FormFiled = ({\n  id,\n  inputName,\n  label,\n  register,\n  errors,\n  ...rest\n}) => {\n  return (\n    <Wrap>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} {...rest} {...register(inputName)} />\n      <Error>\n        <ErrorMessage errors={errors} name={inputName} />\n      </Error>\n    </Wrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding-top: 20px;\n`;\n","export const getCleanItems = items =>\n  items.map(({ name, price, amount }) => ({ name, price, amount }));\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { schema } from './schema';\nimport { formId, inputs } from './inputs';\nimport { getDefaultValues } from 'shared/utils/getDefaultValues';\nimport { useUser } from 'hooks/useUser';\nimport { FormFiled } from '../FormField/FormField';\nimport { List } from './UserForm.styled';\nimport { useCart } from 'hooks/useCart';\nimport { getOrderId } from 'shared/utils/getOrderId';\nimport { getCleanItems } from 'shared/utils/getCleanItems';\nimport { useOrders } from 'hooks/useOrders';\nimport { useDispatch } from 'react-redux';\nimport { sendFirstOrder, sendOrderWithUserId } from 'redux/orders/thunks';\nimport { toast } from 'react-toastify';\n\nexport const UserForm = () => {\n  const user = useUser();\n  const { orders } = useOrders();\n  const { user_id, items, store_name, total_price } = useCart();\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: { ...getDefaultValues(inputs, user) },\n  });\n\n  const notify = () => toast.success('Your order has been successfully sent!');\n\n  const onSubmit = async data => {\n    const { address, user_location } = user;\n\n    const newOrder = {\n      info: { id: getOrderId(), store_name, total_price },\n      items: getCleanItems(items),\n    };\n\n    const formData = {\n      ...data,\n      address,\n      location: user_location,\n      orders: [...orders, newOrder],\n    };\n\n    if (!user_id) {\n      await dispatch(sendFirstOrder(formData))\n        .unwrap()\n        .then(() => notify());\n    }\n\n    if (user_id) {\n      await dispatch(sendOrderWithUserId({ id: user_id, ...formData }))\n        .unwrap()\n        .then(() => notify());\n    }\n  };\n\n  return (\n    <form id={formId} onSubmit={handleSubmit(onSubmit)}>\n      <List>\n        {inputs.map(input => (\n          <li key={input.id}>\n            <FormFiled {...input} register={register} errors={errors} />\n          </li>\n        ))}\n      </List>\n    </form>\n  );\n};\n","const min = 10;\nconst max = 99;\n\nexport const getOrderId = () => {\n  return `${Date.now()}${Math.floor(Math.random() * (max - min + 1)) + min}`;\n};\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  padding: 4px 12px;\n\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.bgPrimary};\n\n  color: ${({ theme }) => theme.primary};\n`;\n\nexport const Number = styled.p`\n  cursor: default;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 16px;\n\n  text-align: center;\n`;\n\nexport const Btn = styled.button`\n  padding: 0px;\n  width: 20px;\n  height: 20px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 20px;\n\n  color: ${({ theme }) => theme.primary};\n  background-color: transparent;\n  border: none;\n  border-radius: 50%;\n\n  transition: color 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic},\n    transform 250ms ${({ theme }) => theme.cubic};\n\n  &:hover {\n    color: ${({ theme }) => theme.cardTextAccent};\n    background-color: ${({ theme }) => theme.primaryTransparet};\n    transform: scale(1.05);\n  }\n\n  &:disabled {\n    cursor: default;\n    color: ${({ theme }) => theme.disabled};\n    background-color: transparent;\n    transform: scale(1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Btn, Number, Wrap } from './Amount.styled';\nimport { setAmount } from 'redux/cart/slice';\n\nexport const Amount = ({ id, amount }) => {\n  const dispatch = useDispatch();\n\n  const handleIncrease = () => {\n    dispatch(setAmount({ id, amount: amount + 1 }));\n  };\n\n  const handleDecrease = () => {\n    dispatch(setAmount({ id, amount: amount - 1 }));\n  };\n\n  return (\n    <Wrap className=\"amount\">\n      <Btn type=\"button\" onClick={handleDecrease} disabled={amount <= 1}>\n        -\n      </Btn>\n      <Number>{amount}</Number>\n      <Btn type=\"button\" onClick={handleIncrease}>\n        +\n      </Btn>\n    </Wrap>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n\n  padding: 20px 20px 20px 51px;\n  height: 120px;\n\n  border-radius: 22px;\n  background: ${({ theme }) => theme.bgCard};\n\n  @media (min-width: ${tablet}) {\n    height: 102px;\n  }\n\n  & .amount {\n    position: absolute;\n    bottom: 3%;\n    right: 2%;\n\n    @media (min-width: ${tablet}) {\n      bottom: 7%;\n      right: 3%;\n    }\n  }\n`;\n\nexport const Info = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  gap: 10px;\n\n  padding-left: 51px;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  top: 50%;\n  left: -35px;\n  transform: translate(0, -50%);\n\n  width: 70px;\n  height: 70px;\n  clip-path: circle(50% at 50% 50%);\n`;\n\nexport const StyledH3 = styled.h3`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 101.34%;\n`;\n\nexport const Price = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 17px;\n  line-height: 20px;\n  text-align: center;\n`;\n\nexport const Btn = styled.button`\n  padding: 0px;\n\n  color: transparent;\n  background-color: transparent;\n  border: none;\n  width: fit-content;\n  height: fit-content;\n`;\n\nexport const Svg = styled.svg`\n  fill: ${({ theme }) => theme.disabled};\n  height: 18px;\n  width: 18px;\n\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    fill 250ms ${({ theme }) => theme.cubic};\n\n  &:hover,\n  &:focus {\n    fill: ${({ theme }) => theme.secondary};\n    transform: scale(1.1);\n  }\n\n  @media (min-width: ${tablet}) {\n    height: 22px;\n    width: 22px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { removeFromCart } from 'redux/cart/slice';\n\nimport { productTittleNormalize } from 'shared/utils/productTitleNoramlize';\nimport { getPrice } from 'shared/utils/getPrice';\n\nimport { Amount } from '../Amount/Amount';\nimport { Btn, Img, Info, Price, StyledH3, Svg, Wrap } from './CartItem.styled';\nimport sprite from 'shared/icons/sprite.svg';\n\nexport const CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const { id, name, url, price, amount } = item;\n\n  const handleRemoveFromCart = () => dispatch(removeFromCart(item));\n\n  return (\n    <Wrap>\n      <Info>\n        <Img src={url} width=\"70\" height=\"70\" loading=\"lazy\" alt={name} />\n        <StyledH3>{productTittleNormalize(name)}</StyledH3>\n        <Price>{getPrice(price)}</Price>\n      </Info>\n      <Btn type=\"button\" onClick={handleRemoveFromCart}>\n        <Svg>\n          <use href={`${sprite}#icon-trash-can-solid`} />\n        </Svg>\n      </Btn>\n      <Amount id={id} amount={amount} />\n    </Wrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding: 20px;\n`;\n","import { useCart } from 'hooks/useCart';\nimport { CartItem } from '../CartItem/CartItem';\nimport { List } from './CartList.styled';\n\nexport const CartList = () => {\n  const { items } = useCart();\n\n  return (\n    <List>\n      {items.map(item => (\n        <li key={item.id}>\n          <CartItem item={item} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nimport { desktop } from 'shared/constants/deviceSizes';\nimport { BaseButton } from 'shared/styles/components/BaseButton.styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  padding: 20px;\n  width: 100%;\n\n  @media (min-width: ${desktop}) {\n    flex-direction: row;\n    justify-content: space-around;\n  }\n`;\n\nexport const Price = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const Total = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 17px;\n  line-height: 20px;\n`;\n\nexport const Number = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 26px;\n`;\n\nexport const SubmitBtn = styled(BaseButton)`\n  padding: 8px 50px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useCart } from 'hooks/useCart';\nimport { useUser } from 'hooks/useUser';\nimport { useDispatch } from 'react-redux';\nimport { setTotalPrice } from 'redux/cart/slice';\nimport { getPrice } from 'shared/utils/getPrice';\nimport { formId } from '../UserForm/inputs';\nimport { Number, Price, SubmitBtn, Total, Wrap } from './Submit.styled';\n\nexport const Submit = () => {\n  const { address } = useUser();\n  const { total_price, items } = useCart();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const price = items.reduce((acc, item) => {\n      return acc + item.price * item.amount;\n    }, 0);\n    dispatch(setTotalPrice(price));\n  }, [dispatch, items]);\n\n  return (\n    <Wrap>\n      <Price>\n        <Total>Total price: </Total>\n        <Number>{getPrice(total_price)}</Number>\n      </Price>\n      <SubmitBtn form={formId} type=\"submit\" disabled={!address}>\n        Submit\n      </SubmitBtn>\n    </Wrap>\n  );\n};\n","import styled from '@emotion/styled';\nimport { tablet } from 'shared/constants/deviceSizes';\n\nexport const Wrap = styled.div`\n  display: grid;\n  gap: 20px;\n\n  @media (min-width: ${tablet}) {\n    grid-template-areas:\n      'form cart'\n      'form submit';\n\n    grid-template-columns: 1fr 1fr;\n\n    & > .form {\n      grid-area: form;\n    }\n\n    & > .cart {\n      grid-area: cart;\n    }\n\n    & > .submit {\n      grid-area: submit;\n      align-self: end;\n    }\n  }\n\n  & > .cart {\n    max-height: 480px;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      width: 0.5em;\n    }\n\n    &::-webkit-scrollbar-track {\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: ${({ theme }) => theme.borderModal};\n      border-radius: 5px;\n    }\n  }\n`;\n","import { Map } from './components/Map/Map';\nimport { UserForm } from './components/UserForm/UserForm';\nimport { CartList } from './components/CartList/CartList';\nimport { Submit } from './components/Submit/Submit';\nimport { Wrap } from './Cart.styled';\nimport { useJsApiLoader } from '@react-google-maps/api';\n\n// const KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst KEY = '';\nconst libraries = ['places'];\n\nexport const Cart = () => {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: KEY,\n    libraries,\n  });\n\n  return (\n    <Wrap>\n      <div className=\"form\">\n        {isLoaded && <Map />}\n        {!isLoaded && <div>Loading...</div>}\n        <UserForm />\n      </div>\n      <div className=\"cart\">\n        <CartList />\n      </div>\n      <div className=\"submit\">\n        <Submit />\n      </div>\n    </Wrap>\n  );\n};\n","import { useCart } from 'hooks/useCart';\n\nimport { Helmet } from 'react-helmet-async';\nimport { Section } from 'shared/styles/components/Section.styled';\nimport { Container } from 'shared/styles/components/Container.styled';\nimport { Cart } from 'modules/Cart';\nimport { Info } from 'shared/styles/components/Info';\n\nconst CartPage = () => {\n  const { items } = useCart();\n\n  const showCart = items.length > 0;\n  const showEmpty = items.length === 0;\n\n  return (\n    <>\n      <Helmet>\n        <title>Cart</title>\n      </Helmet>\n      <Section>\n        <Container>\n          {showCart && <Cart />}\n          {showEmpty && <Info>Your cart is empty</Info>}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default CartPage;\n","import styled from '@emotion/styled';\n\nexport const BaseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 10px;\n\n  clip-path: polygon(\n    10% 0%,\n    100% 0%,\n    100% 30%,\n    100% 60%,\n    90% 100%,\n    0% 100%,\n    0% 70%,\n    0% 40%\n  );\n\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.bgPrimary};\n  background-color: ${({ theme }) => theme.primary};\n  border-radius: 4px;\n  transition: transform 250ms ${({ theme }) => theme.cubic},\n    color 250ms ${({ theme }) => theme.cubic},\n    background-color 250ms ${({ theme }) => theme.cubic},\n    clip-path 250ms ${({ theme }) => theme.cubic};\n\n  &:disabled {\n    cursor: default;\n    background-color: ${({ theme }) => theme.disabled};\n    border-color: ${({ theme }) => theme.disabled};\n  }\n\n  &:not(:disabled):hover {\n    transform: scale(1.05);\n    clip-path: polygon(\n      0% 0%,\n      100% 0,\n      100% 0%,\n      100% 100%,\n      88% 100%,\n      0% 100%,\n      0% 70%,\n      0% 0%\n    );\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Info = styled.p`\n  margin: 0 auto;\n  padding-top: 30vh;\n  width: 300px;\n\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","const formatNumber = {\n  numberWithSpaces(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  },\n  numberWithComas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  },\n};\n\nexport const { numberWithComas, numberWithSpaces } = formatNumber;\n","import { numberWithSpaces } from './formatNumbers';\n\nexport const getPrice = num => `$${numberWithSpaces(num)}.00`;\n","export const productTittleNormalize = name => {\n  if (name.length <= 16) return name;\n  const start = name.slice(0, 14);\n  return `${start}...`;\n};\n","const VALIDATION_MESSAGES = {\n  requiredMes: 'This field is required',\n  nameMes: {\n    format: 'Invalid name format e.g Adrian, Jacob Mercer',\n    size: 'Name may contain only 16 characters',\n  },\n  phoneMes: 'Invalid phone format',\n  emailMes: 'Invalid email format',\n  codeMes: 'Must contain digist only',\n};\n\nexport const { requiredMes, nameMes, phoneMes, emailMes, codeMes } =\n  VALIDATION_MESSAGES;\n","const REG_EXPS = {\n  nameRegExp: new RegExp(\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  ),\n  phoneRegExp:\n    /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n  codeRegExp: new RegExp('^[0-9]*$'),\n};\n\nexport const { nameRegExp, phoneRegExp, codeRegExp } = REG_EXPS;\n"],"names":["selectOrdersItems","state","orders","items","selectOrdersIsLoading","isLoading","selectOrdersError","error","useOrders","useSelector","selectUserName","user","name","selectUserEmail","email","selectUserNumber","number","selectUserAddress","address","selectUserLocation","location","useUser","user_location","Wrap","styled","DeliveryInfo","Field","Label","props","textPrimary","Input","theme","primary","text","inputId","nanoid","Location","map","useState","autocomplete","setAutocomplete","inputValue","setInputValue","dispatch","useDispatch","useEffect","htmlFor","onPlaceChanged","place","getPlace","formatted_address","setUserLocation","setUserAddress","lat","geometry","lng","panTo","onLoad","id","type","value","onChange","target","trim","placeholder","required","initValue","Map","destination","useCart","user_id","origin","store_location","setMap","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","geocoder","window","google","maps","Geocoder","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","calculateRoute","directionsService","DirectionsService","route","travelMode","TravelMode","DRIVING","results","routes","legs","center","zoom","mapContainerStyle","width","height","options","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","onClick","latLng","geocode","status","length","position","directions","schema","Yup","shape","requiredMes","matches","nameRegExp","nameMes","max","emailMes","phoneRegExp","phoneMes","formId","inputs","inputName","label","getDefaultValues","reduce","acc","input","Error","FormFiled","register","errors","rest","List","getCleanItems","price","amount","UserForm","store_name","total_price","useForm","resolver","yupResolver","defaultValues","handleSubmit","formState","notify","toast","onSubmit","data","newOrder","info","Date","now","Math","floor","random","formData","sendFirstOrder","unwrap","then","sendOrderWithUserId","bgPrimary","Number","Btn","cubic","cardTextAccent","primaryTransparet","disabled","Amount","className","setAmount","bgCard","tablet","Info","Img","StyledH3","Price","Svg","secondary","CartItem","item","url","src","loading","alt","productTittleNormalize","getPrice","removeFromCart","href","sprite","CartList","desktop","Total","SubmitBtn","BaseButton","Submit","setTotalPrice","form","borderModal","libraries","Cart","isLoaded","useJsApiLoader","googleMapsApiKey","showCart","showEmpty","Section","numberWithSpaces","x","toString","replace","num","start","slice","format","size","codeMes","REG_EXPS","RegExp","codeRegExp"],"sourceRoot":""}